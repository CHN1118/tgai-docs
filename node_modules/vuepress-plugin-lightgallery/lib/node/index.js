import{getRealPath as g,Logger as c,ensureEndingSlash as u,addViteOptimizeDepsExclude as s}from"@vuepress/helper";import{useSassPalettePlugin as h}from"@vuepress/plugin-sass-palette";import{colors as a,getDirname as y,path as d}from"vuepress/utils";import{createConverter as $}from"vuepress-shared/node";const f=l=>{const{droppedLogger:t}=$("lightgallery");t({options:l,old:"options",msg:`Please import and use ${a.cyan("defineLightGalleryConfig")} from ${a.magenta("vuepress-plugin-lightgallery/client")} instead.`})},{url:p}=import.meta,L=async(l,t=["pager","share","zoom"])=>{const i=t.map(e=>`import(/* webpackChunkName: "lightgallery" */ "${g(`lightgallery/plugins/${e}/lg-${e}.es5.js`,p)}")`),o=t.map(e=>`import "${g(`lightgallery/css/lg-${e}.css`,p)}";`);await l.writeTemp("lightgallery/plugins.js",`${o.join(`
`)}

export const useLightGalleryPlugins = () =>
  Promise.all([
${i.map(e=>`    ${e}`).join(`,
`)}
  ]);
`)},_=y(import.meta.url),m="vuepress-plugin-lightgallery",P=new c(m),E=u(d.resolve(_,"../client")),j=(l={},t=!0)=>i=>{t&&f(l),i.env.isDebug&&P.info("Options:",l);const o=l.plugins??["pager","share","zoom"];return h(i,{id:"hope"}),{name:m,define:()=>({__LG_SELECTOR__:l.selector??".theme-default-content :not(a) > img:not([no-view])",__LG_DELAY__:l.delay??800}),extendsBundlerOptions:(e,r)=>{s(e,r,["lightgallery/lightgallery.es5.js",...o.map(n=>`lightgallery/plugins/${n}/lg-${n}.es5.js`)]),s(e,r,["lightgallery"])},onPrepared:e=>L(e,l.plugins),clientConfigFile:`${E}config.js`}};export{j as lightgalleryPlugin};
//# sourceMappingURL=index.js.map
