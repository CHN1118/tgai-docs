{"version":3,"file":"index.js","sources":["../../src/node/compact.ts","../../src/node/prepareLightGalleryPlugins.ts","../../src/node/utils.ts","../../src/node/lightgalleryPlugin.ts"],"sourcesContent":["import { colors } from \"vuepress/utils\";\nimport { createConverter } from \"vuepress-shared/node\";\n\n/** @deprecated */\nexport const convertOptions = (options: Record<string, unknown>): void => {\n  const { droppedLogger } = createConverter(\"lightgallery\");\n\n  droppedLogger({\n    options,\n    old: \"options\",\n    msg: `Please import and use ${colors.cyan(\n      \"defineLightGalleryConfig\",\n    )} from ${colors.magenta(\"vuepress-plugin-lightgallery/client\")} instead.`,\n  });\n};\n","import { getRealPath } from \"@vuepress/helper\";\nimport type { App } from \"vuepress/core\";\n\nimport type { LightGalleryPlugin } from \"./options.js\";\n\nconst { url } = import.meta;\n\nexport const prepareLightGalleryPlugins = async (\n  app: App,\n  pluginNames: LightGalleryPlugin[] = [\"pager\", \"share\", \"zoom\"],\n): Promise<void> => {\n  const plugins = pluginNames.map(\n    (pluginName) =>\n      `import(/* webpackChunkName: \"lightgallery\" */ \"${getRealPath(\n        `lightgallery/plugins/${pluginName}/lg-${pluginName}.es5.js`,\n        url,\n      )}\")`,\n  );\n  const pluginsStyles = pluginNames.map(\n    (pluginName) =>\n      `import \"${getRealPath(`lightgallery/css/lg-${pluginName}.css`, url)}\";`,\n  );\n\n  await app.writeTemp(\n    \"lightgallery/plugins.js\",\n    `\\\n${pluginsStyles.join(\"\\n\")}\n\nexport const useLightGalleryPlugins = () =>\n  Promise.all([\n${plugins.map((item) => `    ${item}`).join(\",\\n\")}\n  ]);\n`,\n  );\n};\n","import { Logger, ensureEndingSlash } from \"@vuepress/helper\";\nimport { getDirname, path } from \"vuepress/utils\";\n\nconst __dirname = getDirname(import.meta.url);\n\nexport const PLUGIN_NAME = \"vuepress-plugin-lightgallery\";\n\nexport const logger = new Logger(PLUGIN_NAME);\n\nexport const CLIENT_FOLDER = ensureEndingSlash(\n  path.resolve(__dirname, \"../client\"),\n);\n","import { addViteOptimizeDepsExclude } from \"@vuepress/helper\";\nimport { useSassPalettePlugin } from \"@vuepress/plugin-sass-palette\";\nimport type { PluginFunction } from \"vuepress/core\";\n\nimport { convertOptions } from \"./compact.js\";\nimport type { LightGalleryPluginOptions } from \"./options.js\";\nimport { prepareLightGalleryPlugins } from \"./prepareLightGalleryPlugins.js\";\nimport { CLIENT_FOLDER, PLUGIN_NAME, logger } from \"./utils.js\";\n\nexport const lightgalleryPlugin =\n  (options: LightGalleryPluginOptions = {}, legacy = true): PluginFunction =>\n  (app) => {\n    if (legacy) convertOptions(options as Record<string, unknown>);\n\n    if (app.env.isDebug) logger.info(\"Options:\", options);\n\n    const plugins = options.plugins ?? [\"pager\", \"share\", \"zoom\"];\n\n    useSassPalettePlugin(app, { id: \"hope\" });\n\n    return {\n      name: PLUGIN_NAME,\n\n      define: (): Record<string, unknown> => ({\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        __LG_SELECTOR__:\n          options.selector ??\n          \".theme-default-content :not(a) > img:not([no-view])\",\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        __LG_DELAY__: options.delay ?? 800,\n      }),\n\n      extendsBundlerOptions: (bundlerOptions: unknown, app): void => {\n        addViteOptimizeDepsExclude(bundlerOptions, app, [\n          \"lightgallery/lightgallery.es5.js\",\n          ...plugins.map(\n            (name) => `lightgallery/plugins/${name}/lg-${name}.es5.js`,\n          ),\n        ]);\n        addViteOptimizeDepsExclude(bundlerOptions, app, [\"lightgallery\"]);\n      },\n\n      onPrepared: (app): Promise<void> =>\n        prepareLightGalleryPlugins(app, options.plugins),\n\n      clientConfigFile: `${CLIENT_FOLDER}config.js`,\n    };\n  };\n"],"names":["convertOptions","options","droppedLogger","createConverter","colors","url","prepareLightGalleryPlugins","app","pluginNames","plugins","pluginName","getRealPath","pluginsStyles","item","__dirname","getDirname","PLUGIN_NAME","logger","Logger","CLIENT_FOLDER","ensureEndingSlash","path","lightgalleryPlugin","legacy","useSassPalettePlugin","bundlerOptions","addViteOptimizeDepsExclude","name"],"mappings":"gTAIO,MAAMA,EAAkBC,GAA2C,CACxE,KAAM,CAAE,cAAAC,CAAc,EAAIC,EAAgB,cAAc,EAExDD,EAAc,CACZ,QAAAD,EACA,IAAK,UACL,IAAK,yBAAyBG,EAAO,KACnC,0BACF,CAAC,SAASA,EAAO,QAAQ,qCAAqC,CAAC,WACjE,CAAC,CACH,ECTM,CAAE,IAAAC,CAAI,EAAI,YAEHC,EAA6B,MACxCC,EACAC,EAAoC,CAAC,QAAS,QAAS,MAAM,IAC3C,CAClB,MAAMC,EAAUD,EAAY,IACzBE,GACC,kDAAkDC,EAChD,wBAAwBD,CAAU,OAAOA,CAAU,UACnDL,CACF,CAAC,IACL,EACMO,EAAgBJ,EAAY,IAC/BE,GACC,WAAWC,EAAY,uBAAuBD,CAAU,OAAQL,CAAG,CAAC,IACxE,EAEA,MAAME,EAAI,UACR,0BACA,GACFK,EAAc,KAAK;AAAA,CAAI,CAAC;AAAA;AAAA;AAAA;AAAA,EAIxBH,EAAQ,IAAKI,GAAS,OAAOA,CAAI,EAAE,EAAE,KAAK;AAAA,CAAK,CAAC;AAAA;AAAA,CAGhD,CACF,EC/BMC,EAAYC,EAAW,YAAY,GAAG,EAE/BC,EAAc,+BAEdC,EAAS,IAAIC,EAAOF,CAAW,EAE/BG,EAAgBC,EAC3BC,EAAK,QAAQP,EAAW,WAAW,CACrC,ECFaQ,EACX,CAACrB,EAAqC,GAAIsB,EAAS,KAClDhB,GAAQ,CACHgB,GAAQvB,EAAeC,CAAkC,EAEzDM,EAAI,IAAI,SAASU,EAAO,KAAK,WAAYhB,CAAO,EAEpD,MAAMQ,EAAUR,EAAQ,SAAW,CAAC,QAAS,QAAS,MAAM,EAE5D,OAAAuB,EAAqBjB,EAAK,CAAE,GAAI,MAAO,CAAC,EAEjC,CACL,KAAMS,EAEN,OAAQ,KAAgC,CAEtC,gBACEf,EAAQ,UACR,sDAEF,aAAcA,EAAQ,OAAS,GACjC,GAEA,sBAAuB,CAACwB,EAAyBlB,IAAc,CAC7DmB,EAA2BD,EAAgBlB,EAAK,CAC9C,mCACA,GAAGE,EAAQ,IACRkB,GAAS,wBAAwBA,CAAI,OAAOA,CAAI,SACnD,CACF,CAAC,EACDD,EAA2BD,EAAgBlB,EAAK,CAAC,cAAc,CAAC,CAClE,EAEA,WAAaA,GACXD,EAA2BC,EAAKN,EAAQ,OAAO,EAEjD,iBAAkB,GAAGkB,CAAa,WACpC,CACF"}